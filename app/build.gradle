apply plugin: 'com.android.application'
//应用插件
//apply plugin: 'com.bugtags.library.plugin'
apply plugin: 'im.fir.plugin.gradle'//必填
fir {
    //必填 上传 fir.im apk 字段，否则无法上传 APP 到 fir.im
    apiToken API_TOKEN

    //可选 上传fir.im 中显示的changelog
    changeLog CHANGE_LOG
}
//可选 如需实现自动上传符号表到 BugHD 功能，为必填项
bughd {
    projectId BUGHD_PROJECT_ID
    apiToken BUGHD_API_TOKEN
}

def buildTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.way.captain"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 600003
        versionName "6.0.00.03"
    }
    signingConfigs {
        release {
            def filePrivateProperties = file("../local.properties")
            if (filePrivateProperties.exists()) {
                Properties propsPrivate = new Properties()
                propsPrivate.load(new FileInputStream(filePrivateProperties))

                storeFile file(propsPrivate['key.store'])
                keyAlias propsPrivate['key.alias']
                storePassword propsPrivate['key.store.password']
                keyPassword propsPrivate['key.alias.password']
            }

        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //是否开启BUGTAG
            buildConfigField "boolean", "FIR_ENABLED", "false"
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //是否开启BUGTAG
            buildConfigField "boolean", "FIR_ENABLED", "true"

            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //配置生成的文件名
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            if (file != null && file.name.endsWith('release.apk')) {//变种名为以release.apk结尾时才修改名字
                def fileName = file.name.replace(file.name, "Captain_V" + variant.versionName + "_${buildTime()}.apk")
                output.outputFile = new File(file.parentFile, fileName)
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:design:23.2.0'
    compile 'com.android.support:recyclerview-v7:23.2.0'
    compile 'com.android.support:cardview-v7:23.2.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.alexvasilkov:android-commons:1.2.4'
    compile 'com.alexvasilkov:gesture-views:2.1.1'
    compile('com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.8.6@aar') {
        transitive = true
    }
    compile 'com.ogaclejapan.arclayout:library:1.0.1@aar'
    compile 'com.joanzapata.iconify:android-iconify-material:2.2.2' // (v2.0.0)
    // or 1.4-beta1
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    // or 1.4-beta1
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    // or 1.4-beta1
    compile project(':firupgrade')
}
